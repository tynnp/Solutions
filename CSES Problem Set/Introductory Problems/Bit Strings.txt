</> Tóm tắt yêu cầu
    - Tính số lượng chuỗi bit có độ dài n.
    - Vấn đề là n lên đến 10^6.

</> Cách giải
    - Với n vị trí, mỗi vị trí có 2 lựa chọn (0 hoặc 1) -> có 2^n chuỗi bit độ dài n.
    - Áp dụng tính chất a^b = (a^(b/2))^2 nếu b chẵn và a^b = a.(a^(b//2))^2 nếu b lẻ.
    - Áp dụng a*b % m = ((a%m) * (b%m)) % m.

</> Code C++
    #include <iostream>
    using namespace std;

    long long pow(long long a, long long b, int m) {
        long long res = 1;
        a = a % m;
        
        while (b) {
            if (b & 1) res = (res * a) % m;
            a = a * a % m;
            b >>= 1;
        }
        
        return res;
    }

    int main() {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        
        long long n;
        const int MOD = 1e9 + 7;
        
        cin >> n;
        cout << pow(2, n, MOD);
        return 0;
    }

</> Code Python sử dụng hàm pow
    n = int(input())
    print(pow(2, n, 10**9 + 7))

</> Code Python sử dụng kỹ thuật lũy thừa nhị phân
    n = int(input())

    def binaryPow(a, b, m):
        res = 1
        a = a % m
        
        while b:
            if b & 1: 
                res = (res * a) % m
            a = (a * a) % m
            b >>= 1
        
        return res

    print(binaryPow(2, n, 10**9 + 7))