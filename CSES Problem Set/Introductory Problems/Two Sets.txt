</> Tóm tắt yêu cầu
    - Cho một số n.
    - Chia các số từ 1 đến n thành 2 bộ có tổng bằng nhau.

</> Cách giải
    - Xét tổng từ 1 đến n, nếu kết quả là số lẻ thì không chia được.
    - Trường hợp chia được, ta tính tổng (sum) của một bộ được chia.
    - Duyệt i = n đến 1. Nếu i <= sum thì thêm i vào mảng A, cập nhật sum -= i.
    - Ngược lại (i > sum) thì thêm i vào mảng B.
    - Kết quả thu được mảng A và B có tổng bằng nhau.
    - Với n đến 10^6 thao tác tính tổng dãy có thể bị tràn số với C++.

</> Code C++ 
    #include <iostream>
    #include <vector>
    using namespace std;

    int main() {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        
        long long n, sum;
        vector<int> a, b;
        cin >> n;
        
        sum = n*(n+1) >> 1;
        if (sum & 1) {
            cout << "NO";
            return 0;
        }
        
        sum >>= 1;
        for (int i = n; i >= 1; i--) {
            if (i <= sum) {
                a.push_back(i);
                sum -= i;
            } else 
                b.push_back(i);
        }
        
        cout << "YES\n";
        cout << a.size() << '\n';
        for (int x : a) cout << x << " ";
        cout << '\n' << b.size() << '\n';
        for (int x : b) cout << x << " ";
        
        return 0;
    }

</> Code Python
    n = int(input())
    a = []
    b = []

    sum = n*(n+1) >> 1 
    if sum & 1:
        print("NO")
        exit()

    sum >>= 1
    for i in range(n, 0, -1):
        if i <= sum:
            a.append(i)
            sum -= i
        else:
            b.append(i)
            
    print("YES")
    print(len(a), ' '.join(map(str, a)), sep='\n')
    print(len(b), ' '.join(map(str, b)), sep='\n')